c     SUSY_FLAVOR: program for calculating rare decays in the general MSSM
c     Maintainer: Janusz Rosiek (janusz.rosiek@fuw.edu.pl)
c     Program web page: http://www.fuw.edu.pl/susy_flavor

c     FILENAME: C_FUN_EXP.F
c     Released: 05: 4:2014 (J.R.)

cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c     This file contains three-point standard loop integrals         c
c     c0(p2,q2,pq;m1,m2,m3), c11 and c12 expanded to order p^2, q^2  c
c     For definitions of these functions see:                        c
c     A.Axelrod@Nucl.Phys.B209(1982) p.349 (compare: Chankowski,     c
c     Pokorski,Rosiek, Nucl.Phys.B423(1994) p.437 (hep-ph/9303309).  c
c     The convention for external momenta and internal masses are:   c
c                                                                    c
c                       ________ p (outgoing)                        c
c                   / |                                              c
c            m1   /   |                                              c
c               /     |                                              c
c             /       |                                              c
c     -------         | m2              = c0(p2,q2,pq;m1,m2,m3)      c
c             \       |                                              c
c               \     |                                              c
c            m3   \   |                                              c
c                   \ |_________ q (outgoing)                        c
c                                                                    c
c                                                                    c
c                                                                    c
c     -i/(4 pi)^2 c0 = INT d^4k/(2 pi)^4                             c
c            1/(k^2-m2^2)/((k-q)^2-m3^2)/((k+p)^2-m1^2)              c
c                                                                    c
c   p2 = p^2    q2 = q^2    pq = 1/2 ((p + q)^2 - p^2 - q^2)         c
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

      double precision function c0exp(p2,q2,pq,a1,a2,a3)
      implicit double precision (a-h,o-z)
      logical infstat
      common/renorm/del,amiu2,infstat
      common/cp_acc/eps
      if (infstat) then
         c0exp = 0.d0
         return
      end if
      sc = max(a1,a2,a3)**2
      e1 = a1*a1/sc
      e2 = a2*a2/sc
      e3 = a3*a3/sc
      d12 = abs((e1-e2)/(e1+e2))
      d13 = abs((e1-e3)/(e1+e3))
      d23 = abs((e2-e3)/(e2+e3))
      if ((e1.le.eps).or.(e2.le.eps).or.(e3.le.eps)) then
         c0exp = c0_0(p2/sc,q2/sc,pq/sc,e1,e2,e3)
      else if ((d12.le.eps).or.(d13.le.eps).or.(d23.le.eps).or.
     $        ((d12.le.3*eps).and.(d23.le.3*eps))) then
         c0exp = c0_eq(p2/sc,q2/sc,pq/sc,e1,e2,e3)
      else
         c0exp = c0_neq(p2/sc,q2/sc,pq/sc,e1,e2,e3)
      end if
      c0exp = - c0exp/sc
      return
      end

      double precision function c11exp(p2,q2,pq,a1,a2,a3)
      implicit double precision (a-h,o-z)
      logical infstat
      common/renorm/del,amiu2,infstat
      common/cp_acc/eps
      if (infstat) then
         c11exp = 0.d0
         return
      end if
      sc = max(a1,a2,a3)**2
      e1 = a1*a1/sc
      e2 = a2*a2/sc
      e3 = a3*a3/sc
      d12 = abs((e1-e2)/(e1+e2))
      d13 = abs((e1-e3)/(e1+e3))
      d23 = abs((e2-e3)/(e2+e3))
      if ((e1.le.eps).or.(e2.le.eps).or.(e3.le.eps)) then
         c11exp = c11_0(p2/sc,q2/sc,pq/sc,e1,e2,e3)
      else if ((d12.le.eps).or.(d13.le.eps).or.(d23.le.eps).or.
     $        ((d12.le.3*eps).and.(d23.le.3*eps))) then
         c11exp = c11_eq(p2/sc,q2/sc,pq/sc,e1,e2,e3)
      else
         c11exp = c11_neq(p2/sc,q2/sc,pq/sc,e1,e2,e3)
      end if
      c11exp = - c11exp/sc
      return
      end

      double precision function c12exp(p2,q2,pq,a1,a2,a3)
      implicit double precision (a-h,o-z)
      logical infstat
      common/renorm/del,amiu2,infstat
      common/cp_acc/eps
      if (infstat) then
         c12exp = 0.d0
         return
      end if
      sc = max(a1,a2,a3)**2
      e1 = a1*a1/sc
      e2 = a2*a2/sc
      e3 = a3*a3/sc
      d12 = abs((e1-e2)/(e1+e2))
      d13 = abs((e1-e3)/(e1+e3))
      d23 = abs((e2-e3)/(e2+e3))
      if ((e1.le.eps).or.(e2.le.eps).or.(e3.le.eps)) then
         c12exp = c12_0(p2/sc,q2/sc,pq/sc,e1,e2,e3)
      else if ((d12.le.eps).or.(d13.le.eps).or.(d23.le.eps).or.
     $        ((d12.le.3*eps).and.(d23.le.3*eps))) then
         c12exp = c12_eq(p2/sc,q2/sc,pq/sc,e1,e2,e3)
      else
         c12exp = c12_neq(p2/sc,q2/sc,pq/sc,e1,e2,e3)
      end if
      c12exp = - c12exp/sc
      return
      end

c
c     expanded expressions for various mass combinations
c

      double precision function c0_0(p2,q2,pq,e1,e2,e3)
c     one loop mass vanish
      implicit double precision (a-h,o-z)
      common/cp_acc/eps
      if (e1.le.eps) then
         e4 = max(e1,eps)
         if (abs((e2-e3)/(e2+e3)).le.eps) then
            c0_0 = (-110*e2**5 + 70*e2**4*e3 - 20*e2**3*e3**2 - 260*e2
     $           **4*e4 + 310*e2**3*e3*e4 - 110*e2**2*e3**2*e4 - 470*e2
     $           **3*e4**2 + 670*e2**2*e3*e4**2 - 260*e2*e3**2*e4**2 -
     $           72*e2**4*q2 + 79*e2**3*e3*q2 - 27*e2**2*e3**2*q2 - 822
     $           *e2**3*e4*q2 + 1159*e2**2*e3*e4*q2 - 447*e2*e3**2*e4*q2
     $           - 3132*e2**2*e4**2*q2 + 4849*e2*e3*e4**2*q2 - 1977*e3
     $           **2*e4**2*q2 + 180*e2**4*e4*Log(e2/e4) - 180*e2**3*e3
     $           *e4*Log(e2/e4) + 60*e2**2*e3**2*e4*Log(e2/e4) + 540*e2
     $           **3*e4**2*Log(e2/e4) - 660*e2**2*e3*e4**2*Log(e2/e4) +
     $           240*e2*e3**2*e4**2*Log(e2/e4) + 360*e2**3*e4*q2*Log(e2
     $           /e4) - 480*e2**2*e3*e4*q2*Log(e2/e4) + 180*e2*e3**2*e4
     $           *q2*Log(e2/e4) + 2160*e2**2*e4**2*q2*Log(e2/e4) - 3180
     $           *e2*e3*e4**2*q2*Log(e2/e4) + 1260*e3**2*e4**2*q2*Log(e2
     $           /e4) + 5*pq*(e2**2*(-23*e2**2 + 26*e2*e3 - 9*e3**2) - 2
     $           *e2*(173*e2**2 - 242*e2*e3 + 93*e3**2)*e4 - 3*(469*e2
     $           **2 - 718*e2*e3 + 291*e3**2)*e4**2 + 12*e4*(2*e2*(6*e2
     $           **2 - 8*e2*e3 + 3*e3**2) + 3*(26*e2**2 - 38*e2*e3 + 15
     $           *e3**2)*e4)*Log(e2/e4)) + 10*p2*(-3*e2**2*(3*e2**2 - 3
     $           *e2*e3 + e3**2) - 2*e2*(64*e2**2 - 83*e2*e3 + 31*e3**2)
     $           *e4 - 3*(169*e2**2 - 245*e2*e3 + 97*e3**2)*e4**2 + 6*e4
     $           *(e2*(9*e2**2 - 11*e2*e3 + 4*e3**2) + (57*e2**2 - 78*e2
     $           *e3 + 30*e3**2)*e4)*Log(e2/e4)))/(60.d0*e2**6)
         else
            c0_0 = (-((e2 - e3)**2*p2*(e2**3*e3**2 - e2**2*e3**3 + 3*e2
     $           **3*e3*e4 - 3*e2*e3**3*e4 + 5*e2**3*e4**2 - 5*e3**3*e4
     $           **2 + 2*e4*(-(e2**3*e3) + e2*e3**3 - 3*e2**3*e4 + 3*e3
     $           **3*e4)*Log(e2) - 2*e2**3*e3*e4*Log(e3/e2) - 6*e2**3*e4
     $           **2*Log(e3/e2) + 2*e4*(e2**3*e3 - e2*e3**3 + 3*e2**3*e4
     $           - 3*e3**3*e4)*Log(e4))) + e2*(2*(e2 - e3)**2*e3*((e2 -
     $           e3)*e4*(e2*e3 + (e2 + e3)*e4)*Log(e2) + e2**2*(e3**2 +
     $           e3*e4 + e4**2)*Log(e3/e2) - (e2 - e3)*e4*(e2*e3 + (e2 +
     $           e3)*e4)*Log(e4)) - 2*(e2 - e3)*pq*(e2**3*e3**2 - e2**2
     $           *e3**3 + 3*e2**3*e3*e4 - 4*e2**2*e3**2*e4 + e2*e3**3*e4
     $           + 5*e2**3*e4**2 - 6*e2**2*e3*e4**2 + e3**3*e4**2 - (e2
     $           - e3)**2*e4*(2*e2*e3 + 6*e2*e4 + 3*e3*e4)*Log(e2) + e2
     $           **2*e3**3*Log(e3/e2) - 2*e2**3*e3*e4*Log(e3/e2) + 4*e2
     $           **2*e3**2*e4*Log(e3/e2) - 6*e2**3*e4**2*Log(e3/e2) + 9
     $           *e2**2*e3*e4**2*Log(e3/e2) + (e2 - e3)**2*e4*(2*e2*e3 +
     $           3*(2*e2 + e3)*e4)*Log(e4)) + q2*(2*(e2 - e3)**3*e4*(e2
     $           *e3 + (3*e2 + e3)*e4)*Log(e2) + e2**2*(-((e2 - e3)*((e2
     $           - 3*e3)*e3**2 + (3*e2 - 5*e3)*e3*e4 + (5*e2 - 7*e3)*e4
     $           **2)) + 2*(e3**4 + e3*(e2**2 - 3*e2*e3 + 3*e3**2)*e4 +
     $           (3*e2**2 - 8*e2*e3 + 6*e3**2)*e4**2)*Log(e3/e2)) - 2
     $           *(e2 - e3)**3*e4*(e2*e3 + (3*e2 + e3)*e4)*Log(e4))))
     $           /(2.d0*e2**3*(e2 - e3)**3*e3**3)
         end if
      else if (e2.le.eps) then
         e4 = max(e2,eps)
         if (abs((e1-e3)/(e1+e3)).le.eps) then
            c0_0 = -(110*e1**5 - 70*e1**4*e3 + 20*e1**3*e3**2 + 260*e1
     $           **4*e4 - 310*e1**3*e3*e4 + 110*e1**2*e3**2*e4 + 470*e1
     $           **3*e4**2 - 670*e1**2*e3*e4**2 + 260*e1*e3**2*e4**2 +
     $           72*e1**4*q2 - 79*e1**3*e3*q2 + 27*e1**2*e3**2*q2 + 822
     $           *e1**3*e4*q2 - 1159*e1**2*e3*e4*q2 + 447*e1*e3**2*e4*q2
     $           + 3132*e1**2*e4**2*q2 - 4849*e1*e3*e4**2*q2 + 1977*e3
     $           **2*e4**2*q2 + 180*e1**4*e4*Log(e4/e1) - 180*e1**3*e3
     $           *e4*Log(e4/e1) + 60*e1**2*e3**2*e4*Log(e4/e1) + 540*e1
     $           **3*e4**2*Log(e4/e1) - 660*e1**2*e3*e4**2*Log(e4/e1) +
     $           240*e1*e3**2*e4**2*Log(e4/e1) + 360*e1**3*e4*q2*Log(e4
     $           /e1) - 480*e1**2*e3*e4*q2*Log(e4/e1) + 180*e1*e3**2*e4
     $           *q2*Log(e4/e1) + 2160*e1**2*e4**2*q2*Log(e4/e1) - 3180
     $           *e1*e3*e4**2*q2*Log(e4/e1) + 1260*e3**2*e4**2*q2*Log(e4
     $           /e1) - pq*(-29*e1**4 + 411*e3**2*e4**2 + e1**3*(28*e3 +
     $           86*e4) - 4*e1*e3*e4*(-9*e3 + 268*e4) + 3*e1**2*(-3*e3
     $           **2 - 34*e3*e4 + 257*e4**2) + 60*(6*e1**2 - 8*e1*e3 + 3
     $           *e3**2)*e4**2*Log(e4/e1)) + p2*(47*e1**4 + e1*e3*(137
     $           *e3 - 1429*e4)*e4 + 522*e3**2*e4**2 + e1**3*(-39*e3 +
     $           372*e4) + 3*e1**2*(4*e3**2 - 133*e3*e4 + 389*e4**2) +
     $           60*e4*(3*e1**3 + e1*e3*(e3 - 17*e4) + 6*e3**2*e4 + 3*e1
     $           **2*(-e3 + 5*e4))*Log(e4/e1)))/(60.d0*e1**6)
         else
            c0_0 = (e3*p2*(3*e1**4*e3**2 - 4*e1**3*e3**3 + e1**2*e3**4 +
     $           5*e1**3*e3**2*e4 - 8*e1**2*e3**3*e4 + 3*e1*e3**4*e4 + 7
     $           *e1**2*e3**2*e4**2 - 12*e1*e3**3*e4**2 + 5*e3**4*e4**2
     $           + 2*(e1 - e3)**3*e4*(3*e3*e4 + e1*(e3 + e4))*Log(e1) +
     $           2*e1**4*e3**2*Log(e3/e1) + 2*e1**4*e3*e4*Log(e3/e1) + 2
     $           *e1**4*e4**2*Log(e3/e1) - 2*(e1 - e3)**3*e4*(3*e3*e4 +
     $           e1*(e3 + e4))*Log(e4)) + e1*(2*e3*pq*(2*e1**3*e3**2 - 2
     $           *e1**2*e3**3 + e1**3*e3*e4 - e1*e3**3*e4 + e1**3*e4**2
     $           - e1**2*e3*e4**2 + e1*e3**2*e4**2 - e3**3*e4**2 - (e1 -
     $           e3)**3*e4**2*Log(e1) + e1**3*e3**2*Log(e3/e1) + e1**2
     $           *e3**3*Log(e3/e1) + 2*e1**2*e3**2*e4*Log(e3/e1) - e1**3
     $           *e4**2*Log(e3/e1) + 3*e1**2*e3*e4**2*Log(e3/e1) + (e1 -
     $           e3)**3*e4**2*Log(e4)) + 2*(e1 - e3)**2*e3*((e1 - e3)*e4
     $           *(e3*e4 + e1*(e3 + e4))*Log(e1) + e1**2*(e3**2 + e3*e4
     $           + e4**2)*Log(e3/e1) - (e1 - e3)*e4*(e3*e4 + e1*(e3 +
     $           e4))*Log(e4)) + q2*(2*(e1 - e3)**3*e4*(e3*e4 + e1*(e3 +
     $           3*e4))*Log(e1) + e1**2*(4*e1*e3*(e3**2 + 2*e3*e4 + 3*e4
     $           **2) - e1**2*(e3**2 + 3*e3*e4 + 5*e4**2) - e3**2*(3*e3
     $           **2 + 5*e3*e4 + 7*e4**2) + 2*(e1**2*e4*(e3 + 3*e4) - e1
     $           *e3*e4*(3*e3 + 8*e4) + e3**2*(e3**2 + 3*e3*e4 + 6*e4
     $           **2))*Log(e3/e1)) - 2*(e1 - e3)**3*e4*(e3*e4 + e1*(e3 +
     $           3*e4))*Log(e4))))/(2.d0*e1**3*(e1 - e3)**3*e3**3)
         end if
      else
         e4 = max(e3,eps)
         if (abs((e1-e2)/(e1+e2)).le.eps) then
            c0_0 = -(p2*(47*e1**4 + e1*e2*(137*e2 - 1429*e4)*e4 + 522*e2
     $           **2*e4**2 + e1**3*(-39*e2 + 372*e4) + 3*e1**2*(4*e2**2
     $           - 133*e2*e4 + 389*e4**2) + 60*e4*(3*e1**3 + e1*e2*(e2 -
     $           17*e4) - 3*e1**2*(e2 - 5*e4) + 6*e2**2*e4)*Log(e4/e1))
     $           + 5*(pq*(13*e1**4 - 2*e1**3*(5*e2 - 83*e4) + 2*e1*e2
     $           *(31*e2 - 393*e4)*e4 + 291*e2**2*e4**2 + 3*e1**2*(e2**2
     $           - 60*e2*e4 + 207*e4**2) + 12*e4*(6*e1**3 + 2*e1*e2*(e2
     $           - 21*e4) - 6*e1**2*(e2 - 6*e4) + 15*e2**2*e4)*Log(e4
     $           /e1)) + 2*(e1*(11*e1**4 + e1*e2*(11*e2 - 67*e4)*e4 + 26
     $           *e2**2*e4**2 + e1**3*(-7*e2 + 26*e4) + e1**2*(2*e2**2 -
     $           31*e2*e4 + 47*e4**2) + 6*e4*(3*e1**3 + e1*e2*(e2 - 11
     $           *e4) - 3*e1**2*(e2 - 3*e4) + 4*e2**2*e4)*Log(e4/e1)) +
     $           q2*(9*e1**4 + e1*e2*(62*e2 - 735*e4)*e4 + 291*e2**2*e4
     $           **2 + e1**3*(-9*e2 + 128*e4) + e1**2*(3*e2**2 - 166*e2
     $           *e4 + 507*e4**2) + 6*e4*(9*e1**3 + 2*e1*e2*(2*e2 - 39
     $           *e4) + 30*e2**2*e4 + e1**2*(-11*e2 + 57*e4))*Log(e4
     $           /e1)))))/(60.d0*e1**6)
         else
            c0_0 = (e2*p2*(2*(e1 - e2)**3*e4*(3*e2*e4 + e1*(e2 + e4))
     $           *Log(e1) + 2*e1**4*(e2**2 + e2*e4 + e4**2)*Log(e2/e1) +
     $           (e1 - e2)*(e2**2*(3*e1**3 - e1**2*(e2 - 5*e4) - 5*e2*e4
     $           **2 + e1*e4*(-3*e2 + 7*e4)) - 2*(e1 - e2)**2*e4*(3*e2
     $           *e4 + e1*(e2 + e4))*Log(e4))) + (e1 - e2)*(2*e2*pq*((e1
     $           - e2)**2*e4*(2*e1*e2 + 3*e1*e4 + 6*e2*e4)*Log(e1) + e1
     $           **3*(e2**2 + 2*e2*e4 + 3*e4**2)*Log(e2/e1) + (e1 - e2)
     $           *(e1*e2*(3*e2 - e4)*e4 + 5*e2**2*e4**2 + e1**2*(e2**2 -
     $           e2*e4 - e4**2) - (e1 - e2)*e4*(2*e1*e2 + 3*e1*e4 + 6*e2
     $           *e4)*Log(e4))) + (e1 - e2)*(q2*(-(e1**3*e2**2) + e1**2
     $           *e2**3 - 3*e1**3*e2*e4 + 3*e1*e2**3*e4 - 5*e1**3*e4**2
     $           + 5*e2**3*e4**2 + 2*e4*(-(e1*e2**3) - 3*e2**3*e4 + e1
     $           **3*(e2 + 3*e4))*Log(e1) + 2*e1**3*e4*(e2 + 3*e4)
     $           *Log(e2/e1) - 2*e1**3*e2*e4*Log(e4) + 2*e1*e2**3*e4
     $           *Log(e4) - 6*e1**3*e4**2*Log(e4) + 6*e2**3*e4**2
     $           *Log(e4)) + 2*e1*e2*((e1 - e2)*e4*(e2*e4 + e1*(e2 +
     $           e4))*Log(e1) + e1**2*(e2**2 + e2*e4 + e4**2)*Log(e2/e1)
     $           - (e1 - e2)*e4*(e2*e4 + e1*(e2 + e4))*Log(e4)))))/(2.d0
     $           *e1**3*(e1 - e2)**3*e2**3)
         end if
      end if
      return
      end

      double precision function c0_eq(p2,q2,pq,e1,e2,e3)
c     2 loop masses equal
      implicit double precision (a-h,o-z)
      common/cp_acc/eps
      if ((abs((e1-e2)/(e1+e2)).le.2*eps).and.(abs((e1-e3)/(e1+e3)).le.2
     $     *eps)) then
         c0_eq = ((-293*e1**4 - 15*e2**2*e3**2 + 216*e1**3*(e2 + e3) +
     $        50*e1*e2*e3*(e2 + e3) - 21*e1**2*(3*e2**2 + 8*e2*e3 + 3*e3
     $        **2))*p2 + (-293*e1**4 - 15*e2**2*e3**2 + 2*e1*e2*e3*(23
     $        *e2 + 27*e3) + 2*e1**3*(85*e2 + 131*e3) - 3*e1**2*(15*e2
     $        **2 + 56*e2*e3 + 27*e3**2))*pq - 2*(7*e1*(73*e1**4 + 2*e2
     $        **2*e3**2 - 38*e1**3*(e2 + e3) - 7*e1*e2*e3*(e2 + e3) + 5
     $        *e1**2*(2*e2**2 + 5*e2*e3 + 2*e3**2)) + (189*e1**4 + 15*e2
     $        **2*e3**2 - 2*e1*e2*e3*(23*e2 + 24*e3) - e1**3*(150*e2 +
     $        173*e3) + e1**2*(45*e2**2 + 149*e2*e3 + 54*e3**2))*q2))
     $        /(840.d0*e1**6)
      else if (abs((e1-e2)/(e1+e2)).le.eps) then
         c0_eq = -(p2*((e1 - e3)*(47*e1**6 - 3*e2**2*e3**4 + e1*e2*e3**3
     $        *(17*e2 + 11*e3) + e1**5*(-39*e2 + 137*e3) + e1**4*(12*e2
     $        **2 - 204*e2*e3 - 223*e3**2) - e1**2*e3**2*(43*e2**2 + 64
     $        *e2*e3 + 18*e3**2) + e1**3*e3*(77*e2**2 + 176*e2*e3 + 117
     $        *e3**2)) + 60*e1**4*e3*(3*e1**2 + e2**2 + e2*e3 + e3**2 -
     $        3*e1*(e2 + e3))*Log(e3/e1)) + 5*e1*(pq*((e1 - e3)*(13*e1
     $        **5 - e2**2*e3**3 + e1*e2*e3**2*(11*e2 + 6*e3) + e1**4*(
     $        -10*e2 + 101*e3) + e1**3*(3*e2**2 - 130*e2*e3 - 79*e3**2)
     $        + e1**2*e3*(47*e2**2 + 14*e2*e3 + 25*e3**2)) + 12*e1**2*e3
     $        *(6*e1**3 - 6*e1**2*e2 + 2*e1*(e2**2 - 3*e2*e3 - e3**2) +
     $        e3*(3*e2**2 + 2*e2*e3 + e3**2))*Log(e3/e1)) + 2*((e1 - e3)
     $        **2*((e1 - e3)*(11*e1**4 - e2**2*e3**2 - 7*e1**3*(e2 + e3)
     $        + 5*e1*e2*e3*(e2 + e3) + 2*e1**2*(e2**2 - 5*e2*e3 + e3
     $        **2)) + 6*e1**2*e3*(3*e1**2 + e2**2 + e2*e3 + e3**2 - 3*e1
     $        *(e2 + e3))*Log(e3/e1)) + q2*((e1 - e3)*(9*e1**5 - e2**2
     $        *e3**3 + e1*e2*e3**2*(11*e2 + 5*e3) + e1**4*(-9*e2 + 83
     $        *e3) + e1**3*(3*e2**2 - 121*e2*e3 - 43*e3**2) + e1**2*e3
     $        *(47*e2**2 + 5*e2*e3 + 11*e3**2)) + 6*e1**2*e3*(9*e1**3 +
     $        e1**2*(-11*e2 + 3*e3) + e1*(4*e2**2 - 12*e2*e3 - 3*e3**2)
     $        + e3*(6*e2**2 + 3*e2*e3 + e3**2))*Log(e3/e1)))))/(60.d0*e1
     $        **3*(e1 - e3)**6)
      else if (abs((e1-e3)/(e1+e3)).le.eps) then
         c0_eq = -(10*e1**2*(e1 - e2)**2*(6*e1**4 - 18*e1**3*e2 + 18*e1
     $        **2*e2**2 - 6*e1*e2**3 + 2*e1**3*q2 + 3*e1**2*e2*q2 - 6*e1
     $        *e2**2*q2 + e2**3*q2 + 6*e1**3*e2*Log(e2/e1) - 12*e1**2*e2
     $        **2*Log(e2/e1) + 6*e1*e2**3*Log(e2/e1) + 6*e1**2*e2*q2
     $        *Log(e2/e1) + p2*(2*e1**3 + 3*e1**2*e2 - 6*e1*e2**2 + e2
     $        **3 + 6*e1**2*e2*Log(e2/e1)) + pq*(e1**3 - 6*e1**2*e2 + 3
     $        *e1*e2**2 + 2*e2**3 - 6*e1*e2**2*Log(e2/e1))) - 5*e1*(e1 -
     $        e2)*(-e1 + e3)*(6*e1**5 - 12*e1**4*e2 + 12*e1**2*e2**3 - 6
     $        *e1*e2**4 + 5*e1**4*q2 + 28*e1**3*e2*q2 - 36*e1**2*e2**2
     $        *q2 + 4*e1*e2**3*q2 - e2**4*q2 + 12*e1**4*e2*Log(e2/e1) -
     $        24*e1**3*e2**2*Log(e2/e1) + 12*e1**2*e2**3*Log(e2/e1) + 24
     $        *e1**3*e2*q2*Log(e2/e1) + 12*e1**2*e2**2*q2*Log(e2/e1) +
     $        p2*(3*e1**4 + 10*e1**3*e2 - 18*e1**2*e2**2 + 6*e1*e2**3 -
     $        e2**4 + 12*e1**3*e2*Log(e2/e1)) + 2*pq*(e1**4 - 8*e1**3*e2
     $        + 8*e1*e2**3 - e2**4 - 12*e1**2*e2**2*Log(e2/e1))) + (e1 -
     $        e3)**2*(20*e1**6 - 10*e1**5*e2 - 100*e1**4*e2**2 + 160*e1
     $        **3*e2**3 - 80*e1**2*e2**4 + 10*e1*e2**5 + 27*e1**5*q2 +
     $        285*e1**4*e2*q2 - 300*e1**3*e2**2*q2 - 15*e1*e2**4*q2 + 3
     $        *e2**5*q2 + 60*e1**5*e2*Log(e2/e1) - 120*e1**4*e2**2
     $        *Log(e2/e1) + 60*e1**3*e2**3*Log(e2/e1) + 180*e1**4*e2*q2
     $        *Log(e2/e1) + 180*e1**3*e2**2*q2*Log(e2/e1) + p2*(12*e1**5
     $        + 65*e1**4*e2 - 120*e1**3*e2**2 + 60*e1**2*e2**3 - 20*e1
     $        *e2**4 + 3*e2**5 + 60*e1**4*e2*Log(e2/e1)) + 3*pq*(3*e1**5
     $        - 30*e1**4*e2 - 20*e1**3*e2**2 + 60*e1**2*e2**3 - 15*e1*e2
     $        **4 + 2*e2**5 - 60*e1**3*e2**2*Log(e2/e1))))/(60.d0*e1**3
     $        *(e1 - e2)**6)
      else
         c0_eq = -((5*e2*(e2 - e3)*(-6*e1**4*e2 + 12*e1**3*e2**2 - 12*e1
     $        *e2**4 + 6*e2**5 - e1**4*q2 + 4*e1**3*e2*q2 - 36*e1**2*e2
     $        **2*q2 + 28*e1*e2**3*q2 + 5*e2**4*q2 - 12*e1**3*e2**2
     $        *Log(e2/e1) + 24*e1**2*e2**3*Log(e2/e1) - 12*e1*e2**4
     $        *Log(e2/e1) - 12*e1**2*e2**2*q2*Log(e2/e1) - 24*e1*e2**3
     $        *q2*Log(e2/e1) - 6*e2*p2*(e1**3 + 9*e1**2*e2 - 9*e1*e2**2
     $        - e2**3 + 6*e1*e2*(e1 + e2)*Log(e2/e1)) - 8*e2*pq*(e1**3 +
     $        9*e1**2*e2 - 9*e1*e2**2 - e2**3 + 6*e1*e2*(e1 + e2)*Log(e2
     $        /e1))))/(-e1 + e2)**5 + (10*e2**2*(-6*e1**3*e2 + 18*e1**2
     $        *e2**2 - 18*e1*e2**3 + 6*e2**4 + e1**3*q2 - 6*e1**2*e2*q2
     $        + 3*e1*e2**2*q2 + 2*e2**3*q2 - 6*e1**3*e2*Log(e2/e1) + 12
     $        *e1**2*e2**2*Log(e2/e1) - 6*e1*e2**3*Log(e2/e1) - 6*e1*e2
     $        **2*q2*Log(e2/e1) + 3*e2*pq*(-5*e1**2 + 4*e1*e2 + e2**2 -
     $        2*e1*(e1 + 2*e2)*Log(e2/e1)) - 3*e2*p2*(5*e1**2 - 4*e1*e2
     $        - e2**2 + 2*e1*(e1 + 2*e2)*Log(e2/e1))))/(e1 - e2)**4 +
     $        ((e2 - e3)**2*(10*e1**5*e2 - 80*e1**4*e2**2 + 160*e1**3*e2
     $        **3 - 100*e1**2*e2**4 - 10*e1*e2**5 + 20*e2**6 + 3*e1**5
     $        *q2 - 15*e1**4*e2*q2 - 300*e1**2*e2**3*q2 + 285*e1*e2**4
     $        *q2 + 27*e2**5*q2 - 60*e1**3*e2**3*Log(e2/e1) + 120*e1**2
     $        *e2**4*Log(e2/e1) - 60*e1*e2**5*Log(e2/e1) - 180*e1**2*e2
     $        **3*q2*Log(e2/e1) - 180*e1*e2**4*q2*Log(e2/e1) + 10*e2*p2
     $        *(e1**4 - 12*e1**3*e2 - 36*e1**2*e2**2 + 44*e1*e2**3 + 3
     $        *e2**4 - 12*e1*e2**2*(3*e1 + 2*e2)*Log(e2/e1)) + 15*e2*pq
     $        *(e1**4 - 12*e1**3*e2 - 36*e1**2*e2**2 + 44*e1*e2**3 + 3
     $        *e2**4 - 12*e1*e2**2*(3*e1 + 2*e2)*Log(e2/e1))))/(e1 - e2)
     $        **6)/(60.d0*e2**3)
      end if
      return
      end

      double precision function c0_neq(p2,q2,pq,e1,e2,e3)
c     all masses different and do not vanish
      implicit double precision (a-h,o-z)
      c0_neq = (e1*Log(e2/e1))/((e1 - e2)*(e1 - e3)) + (e3*Log(e2/e1))
     $     /((e1 - e3)*(e2 - e3)) + (e3*Log(e3/e1))/((e1 - e3)*(-e2 +
     $     e3)) + (-2*(-e1 + e2)*(e2 - e3)*pq*((e2 - e3)*((-e1 + e2)*(
     $     -e1 + e3)*(-2*e1*e3 + e2*(e1 + e3)) - e1*(2*e2**2*e3 + e1*e3
     $     *(e1 + e3) - e2*(e1**2 + e1*e3 + 2*e3**2))*Log(e2/e1)) + (e1
     $     - e2)**2*e3*(2*e1*e2 - e1*e3 - e3**2)*(Log(e2/e1) - Log(e3
     $     /e1))) + (e2 - e3)**2*p2*(2*e1*e2*(e1 - e3)**3*Log(e2/e1) +
     $     (e1 - e2)*(-((e1 - e3)*(e2 - e3)*(-3*e1**2 + e2*e3 + e1*(e2 +
     $     e3))) - 2*e1*(e1 - e2)**2*e3*Log(e3/e1))) - (e1 - e2)**2*q2*(
     $     -2*e2*(e1 - e3)**3*e3*Log(e2/e1) + (e1 - e2)*((e1 - e3)*(e2 -
     $     e3)*((e2 - 3*e3)*e3 + e1*(e2 + e3)) + 2*e3*(e1**2*e2 + e1*e2
     $     *(e2 - 3*e3) + e3**3)*Log(e3/e1))))/(2.d0*(e1 - e2)**3*(e1 -
     $     e3)**3*(e2 - e3)**3)
      return
      end

      double precision function c11_0(p2,q2,pq,e1,e2,e3)
c     one loop mass vanish
      implicit double precision (a-h,o-z)
      common/cp_acc/eps
      if (e1.le.eps) then
         e4 = max(e1,eps)
         if (abs((e2-e3)/(e2+e3)).le.eps) then
            c11_0 = (330*e2**5 - 210*e2**4*e3 + 60*e2**3*e3**2 - 540*e2
     $           **4*e4 + 540*e2**3*e3*e4 - 180*e2**2*e3**2*e4 - 3030*e2
     $           **3*e4**2 + 3990*e2**2*e3*e4**2 - 1500*e2*e3**2*e4**2 +
     $           173*e2**4*q2 - 186*e2**3*e3*q2 + 63*e2**2*e3**2*q2 -
     $           806*e2**3*e4*q2 + 1062*e2**2*e3*e4*q2 - 396*e2*e3**2*e4
     $           *q2 - 11355*e2**2*e4**2*q2 + 17130*e2*e3*e4**2*q2 -
     $           6885*e3**2*e4**2*q2 + 1620*e2**3*e4**2*Log(e2/e4) -
     $           1980*e2**2*e3*e4**2*Log(e2/e4) + 720*e2*e3**2*e4**2
     $           *Log(e2/e4) + 4680*e2**2*e4**2*q2*Log(e2/e4) - 6840*e2
     $           *e3*e4**2*q2*Log(e2/e4) + 2700*e3**2*e4**2*q2*Log(e2
     $           /e4) + 60*p2*(e2**2*(3*e2**2 - 3*e2*e3 + e3**2) - 2*e2
     $           *(9*e2**2 - 11*e2*e3 + 4*e3**2)*e4 + (-283*e2**2 + 401
     $           *e2*e3 - 157*e3**2)*e4**2 + 6*(19*e2**2 - 26*e2*e3 + 10
     $           *e3**2)*e4**2*Log(e2/e4)) + 10*pq*(e2**2*(23*e2**2 - 26
     $           *e2*e3 + 9*e3**2) - 24*e2*(6*e2**2 - 8*e2*e3 + 3*e3**2)
     $           *e4 - 3*(781*e2**2 - 1174*e2*e3 + 471*e3**2)*e4**2 + 36
     $           *(26*e2**2 - 38*e2*e3 + 15*e3**2)*e4**2*Log(e2/e4)))
     $           /(360.d0*e2**6)
         else
            c11_0 = ((e2 - e3)**2*p2*(e2**3*e3**2 - e2**2*e3**3 - 2*e2
     $           **3*e3*e4 + 2*e2*e3**3*e4 - 11*e2**3*e4**2 + 11*e3**3
     $           *e4**2 + 6*(e2**3 - e3**3)*e4**2*Log(e2) + 6*e2**3*e4
     $           **2*Log(e3/e2) + 6*(-e2**3 + e3**3)*e4**2*Log(e4)) - e2
     $           *(2*(e2 - e3)*pq*(-(e2**3*e3**2) + e2**2*e3**3 + 2*e2
     $           **3*e3*e4 - 4*e2**2*e3**2*e4 + 2*e2*e3**3*e4 + 11*e2**3
     $           *e4**2 - 15*e2**2*e3*e4**2 + 4*e3**3*e4**2 - 3*(e2 -
     $           e3)**2*(2*e2 + e3)*e4**2*Log(e2) - e2**2*e3**3*Log(e3
     $           /e2) - 6*e2**3*e4**2*Log(e3/e2) + 9*e2**2*e3*e4**2
     $           *Log(e3/e2) + 3*(e2 - e3)**2*(2*e2 + e3)*e4**2*Log(e4))
     $           + q2*(-(e2**4*e3**2) + 6*e2**3*e3**3 - 5*e2**2*e3**4 +
     $           2*e2**4*e3*e4 - 5*e2**3*e3**2*e4 + 6*e2**2*e3**3*e4 - 3
     $           *e2*e3**4*e4 + 11*e2**4*e4**2 - 27*e2**3*e3*e4**2 + 18
     $           *e2**2*e3**2*e4**2 + e2*e3**3*e4**2 - 3*e3**4*e4**2 - 3
     $           *(e2 - e3)**3*(2*e2 + e3)*e4**2*Log(e2) + e2**3*e3**3
     $           *Log(e3/e2) + 3*e2**2*e3**4*Log(e3/e2) + 2*e2**2*e3**3
     $           *e4*Log(e3/e2) - 6*e2**4*e4**2*Log(e3/e2) + 15*e2**3*e3
     $           *e4**2*Log(e3/e2) - 9*e2**2*e3**2*e4**2*Log(e3/e2) + 3
     $           *(e2 - e3)**3*(2*e2 + e3)*e4**2*Log(e4)) + 3*(e2 - e3)
     $           **2*e3*(e2**2*e3*e4 - e2*e3**2*e4 + e2**2*e4**2 - e3**2
     $           *e4**2 + (-e2**2 + e3**2)*e4**2*Log(e2) + e2**2*e3**2
     $           *Log(e3/e2) - e2**2*e4**2*Log(e3/e2) + (e2**2 - e3**2)
     $           *e4**2*Log(e4))))/(6.d0*e2**3*(e2 - e3)**3*e3**3)
         end if
      else if (e2.le.eps) then
         e4 = max(e2,eps)
         if (abs((e1-e3)/(e1+e3)).le.eps) then
            c11_0 = (525*e1**5 - 360*e1**4*e3 + 105*e1**3*e3**2 + 1755
     $           *e1**4*e4 - 2010*e1**3*e3*e4 + 705*e1**2*e3**2*e4 +
     $           3795*e1**3*e4**2 - 5100*e1**2*e3*e4**2 + 1935*e1*e3**2
     $           *e4**2 + 379*e1**4*q2 - 426*e1**3*e3*q2 + 147*e1**2*e3
     $           **2*q2 + 5138*e1**3*e4*q2 - 7194*e1**2*e3*e4*q2 + 2766
     $           *e1*e3**2*e4*q2 + 21327*e1**2*e4**2*q2 - 32622*e1*e3*e4
     $           **2*q2 + 13215*e3**2*e4**2*q2 + 1080*e1**4*e4*Log(e4
     $           /e1) - 1080*e1**3*e3*e4*Log(e4/e1) + 360*e1**2*e3**2*e4
     $           *Log(e4/e1) + 3780*e1**3*e4**2*Log(e4/e1) - 4500*e1**2
     $           *e3*e4**2*Log(e4/e1) + 1620*e1*e3**2*e4**2*Log(e4/e1) +
     $           2160*e1**3*e4*q2*Log(e4/e1) - 2880*e1**2*e3*e4*q2
     $           *Log(e4/e1) + 1080*e1*e3**2*e4*q2*Log(e4/e1) + 14040*e1
     $           **2*e4**2*q2*Log(e4/e1) - 20520*e1*e3*e4**2*q2*Log(e4
     $           /e1) + 8100*e3**2*e4**2*q2*Log(e4/e1) + 2*pq*(63*e1**4
     $           - 1293*e3**2*e4**2 - 32*e1**3*(2*e3 + 7*e4) + 24*e1*e3
     $           *e4*(-4*e3 + 141*e4) - 3*e1**2*(-7*e3**2 - 90*e3*e4 +
     $           817*e4**2) - 180*(6*e1**2 - 8*e1*e3 + 3*e3**2)*e4**2
     $           *Log(e4/e1)) + 6*p2*(37*e1**4 + 669*e3**2*e4**2 + e1**3
     $           *(-32*e3 + 409*e4) - 3*e1*e3*e4*(-49*e3 + 620*e4) + e1
     $           **2*(10*e3**2 - 431*e3*e4 + 1576*e4**2) + 60*e4*(3*e1
     $           **3 + e1*e3*(e3 - 20*e4) + 7*e3**2*e4 + 3*e1**2*(-e3 +
     $           6*e4))*Log(e4/e1)))/(360.d0*e1**6)
         else
            c11_0 = (-(e3*p2*(11*e1**5*e3**2 - 18*e1**4*e3**3 + 9*e1**3
     $           *e3**4 - 2*e1**2*e3**5 + 26*e1**4*e3**2*e4 - 57*e1**3
     $           *e3**3*e4 + 42*e1**2*e3**4*e4 - 11*e1*e3**5*e4 + 47*e1
     $           **3*e3**2*e4**2 - 114*e1**2*e3**3*e4**2 + 93*e1*e3**4
     $           *e4**2 - 26*e3**5*e4**2 + 6*(e1 - e3)**4*e4*(4*e3*e4 +
     $           e1*(e3 + e4))*Log(e1) + 6*e1**5*e3**2*Log(e3/e1) + 6*e1
     $           **5*e3*e4*Log(e3/e1) + 6*e1**5*e4**2*Log(e3/e1) - 6*(e1
     $           - e3)**4*e4*(4*e3*e4 + e1*(e3 + e4))*Log(e4))) + e1*(2
     $           *e3*pq*(-7*e1**4*e3**2 + 8*e1**3*e3**3 - e1**2*e3**4 -
     $           3*e1**4*e3*e4 - 2*e1**3*e3**2*e4 + 7*e1**2*e3**3*e4 - 2
     $           *e1*e3**4*e4 - 3*e1**4*e4**2 + 4*e1**3*e3*e4**2 - 9*e1
     $           **2*e3**2*e4**2 + 12*e1*e3**3*e4**2 - 4*e3**4*e4**2 + 3
     $           *(e1 - e3)**4*e4**2*Log(e1) - 3*e1**4*e3**2*Log(e3/e1)
     $           - 4*e1**3*e3**3*Log(e3/e1) + e1**2*e3**4*Log(e3/e1) - 8
     $           *e1**3*e3**2*e4*Log(e3/e1) + 2*e1**2*e3**3*e4*Log(e3
     $           /e1) + 3*e1**4*e4**2*Log(e3/e1) - 12*e1**3*e3*e4**2
     $           *Log(e3/e1) + 3*e1**2*e3**2*e4**2*Log(e3/e1) - 3*(e1 -
     $           e3)**4*e4**2*Log(e4)) + q2*(3*e1**5*e3**2 - 14*e1**4*e3
     $           **3 + 13*e1**3*e3**4 - 2*e1**2*e3**5 + 9*e1**5*e3*e4 -
     $           31*e1**4*e3**2*e4 + 32*e1**3*e3**3*e4 - 13*e1**2*e3**4
     $           *e4 + 3*e1*e3**5*e4 + 15*e1**5*e4**2 - 47*e1**4*e3*e4
     $           **2 + 45*e1**3*e3**2*e4**2 - 12*e1**2*e3**3*e4**2 - 4
     $           *e1*e3**4*e4**2 + 3*e3**5*e4**2 - 3*(e1 - e3)**4*e4*(3
     $           *e3*e4 + 2*e1*(e3 + 3*e4))*Log(e1) + e1**4*e3**3*Log(e3
     $           /e1) - 10*e1**3*e3**4*Log(e3/e1) + 3*e1**2*e3**5*Log(e3
     $           /e1) - 6*e1**5*e3*e4*Log(e3/e1) + 24*e1**4*e3**2*e4
     $           *Log(e3/e1) - 34*e1**3*e3**3*e4*Log(e3/e1) + 10*e1**2
     $           *e3**4*e4*Log(e3/e1) - 18*e1**5*e4**2*Log(e3/e1) + 63
     $           *e1**4*e3*e4**2*Log(e3/e1) - 72*e1**3*e3**2*e4**2
     $           *Log(e3/e1) + 21*e1**2*e3**3*e4**2*Log(e3/e1) + 3*(e1 -
     $           e3)**4*e4*(2*e1*e3 + 6*e1*e4 + 3*e3*e4)*Log(e4)) - 3
     $           *(e1 - e3)**2*e3*(e1**3*e3**2 - e1**2*e3**3 + e1**2*e3
     $           **2*e4 - e1*e3**3*e4 + e1*e3**2*e4**2 - e3**3*e4**2 +
     $           (e1 - e3)**2*e4*(3*e3*e4 + 2*e1*(e3 + e4))*Log(e1) + 2
     $           *e1**3*e3**2*Log(e3/e1) - e1**2*e3**3*Log(e3/e1) + 2*e1
     $           **3*e3*e4*Log(e3/e1) - e1**2*e3**2*e4*Log(e3/e1) + 2*e1
     $           **3*e4**2*Log(e3/e1) - e1**2*e3*e4**2*Log(e3/e1) - (e1
     $           - e3)**2*e4*(3*e3*e4 + 2*e1*(e3 + e4))*Log(e4))))/(6.d0
     $           *e1**3*(e1 - e3)**4*e3**3)
         end if
      else
         e4 = max(e3,eps)
         if (abs((e1-e2)/(e1+e2)).le.eps) then
            c11_0 = (6*p2*(37*e1**4 + 3*e1*e2*(49*e2 - 620*e4)*e4 + 669
     $           *e2**2*e4**2 + e1**3*(-32*e2 + 409*e4) + e1**2*(10*e2
     $           **2 - 431*e2*e4 + 1576*e4**2) + 60*e4*(3*e1**3 + e1*e2
     $           *(e2 - 20*e4) - 3*e1**2*(e2 - 6*e4) + 7*e2**2*e4)
     $           *Log(e4/e1)) + 2*pq*(159*e1**4 + 6*e1*e2*(163*e2 - 2424
     $           *e4)*e4 + 5307*e2**2*e4**2 + e1**3*(-128*e2 + 2678*e4)
     $           + 3*e1**2*(13*e2**2 - 952*e2*e4 + 3969*e4**2) + 180*e4
     $           *(6*e1**3 + 2*e1*e2*(e2 - 24*e4) - 6*e1**2*(e2 - 7*e4)
     $           + 17*e2**2*e4)*Log(e4/e1)) + 5*(3*e1*(35*e1**4 - 3*e1
     $           **3*(8*e2 - 39*e4) + e1*e2*(47*e2 - 340*e4)*e4 + 129*e2
     $           **2*e4**2 + e1**2*(7*e2**2 - 134*e2*e4 + 253*e4**2) +
     $           12*e4*(6*e1**3 + e1*e2*(2*e2 - 25*e4) + 9*e2**2*e4 + e1
     $           **2*(-6*e2 + 21*e4))*Log(e4/e1)) + q2*(95*e1**4 + 6*e1
     $           *e2*(128*e2 - 1685*e4)*e4 + 3963*e2**2*e4**2 + e1**3*(
     $           -98*e2 + 1608*e4) + 3*e1**2*(11*e2**2 - 688*e2*e4 +
     $           2379*e4**2) + 36*e4*(18*e1**3 + 2*e1*e2*(4*e2 - 85*e4)
     $           + 65*e2**2*e4 + e1**2*(-22*e2 + 126*e4))*Log(e4/e1))))
     $           /(360.d0*e1**6)
         else
            c11_0 = -(e2*p2*(6*(e1 - e2)**4*e4*(4*e2*e4 + e1*(e2 + e4))
     $           *Log(e1) + 6*e1**5*(e2**2 + e2*e4 + e4**2)*Log(e2/e1) +
     $           (e1 - e2)*(e2**2*(11*e1**4 + e1*e2*(11*e2 - 67*e4)*e4 +
     $           26*e2**2*e4**2 + e1**3*(-7*e2 + 26*e4) + e1**2*(2*e2**2
     $           - 31*e2*e4 + 47*e4**2)) - 6*(e1 - e2)**3*e4*(4*e2*e4 +
     $           e1*(e2 + e4))*Log(e4))) + (e1 - e2)*(2*e2*pq*(3*(e1 -
     $           e2)**3*e4*(2*e1*e2 + 3*e1*e4 + 8*e2*e4)*Log(e1) + e1**3
     $           *(3*e1 - e2)*(e2**2 + 2*e2*e4 + 3*e4**2)*Log(e2/e1) +
     $           (e1 - e2)*(-26*e2**3*e4**2 + e1*e2**2*e4*(-11*e2 + 37
     $           *e4) + e1**3*(4*e2**2 - 3*e2*e4 - 3*e4**2) - 2*e1**2*e2
     $           *(e2**2 - 9*e2*e4 + e4**2) - 3*(e1 - e2)**2*e4*(2*e1*e2
     $           + 3*e1*e4 + 8*e2*e4)*Log(e4))) + (e1 - e2)*(3*e1*e2
     $           *((e1 - e2)**2*e4*(3*e2*e4 + 2*e1*(e2 + e4))*Log(e1) +
     $           e1**2*(2*e1 - e2)*(e2**2 + e2*e4 + e4**2)*Log(e2/e1) +
     $           (e1 - e2)*(e2**2*(e1**2 + e1*e4 + e4**2) - (e1 - e2)*e4
     $           *(3*e2*e4 + 2*e1*(e2 + e4))*Log(e4))) - q2*(-3*(e1 -
     $           e2)**2*e4*(8*e2**2*e4 + 2*e1**2*(e2 + 3*e4) + e1*e2*(2
     $           *e2 + 7*e4))*Log(e1) + e1**3*(e2**3 + 6*e2**2*e4 - 18
     $           *e1*e4**2 + 3*e2*e4*(-2*e1 + 5*e4))*Log(e2/e1) + (e1 -
     $           e2)*(-26*e2**3*e4**2 + e1*e2**2*e4*(-11*e2 + 4*e4) + 2
     $           *e1**2*e2*(-e2**2 + e2*e4 + 2*e4**2) + 3*e1**3*(e2**2 +
     $           3*e2*e4 + 5*e4**2) + 3*(e1 - e2)*e4*(8*e2**2*e4 + 2*e1
     $           **2*(e2 + 3*e4) + e1*e2*(2*e2 + 7*e4))*Log(e4))))))
     $           /(6.d0*e1**3*(e1 - e2)**4*e2**3)
         end if
      end if
      return
      end

      double precision function c11_eq(p2,q2,pq,e1,e2,e3)
c     2 loop masses equal
      implicit double precision (a-h,o-z)
      common/cp_acc/eps
      if ((abs((e1-e2)/(e1+e2)).le.2*eps).and.(abs((e1-e3)/(e1+e3)).le.2
     $     *eps)) then
         c11_eq = (4512*e1**5 - 2556*e1**4*e2 + 690*e1**3*e2**2 - 2556
     $        *e1**4*e3 + 1752*e1**3*e2*e3 - 498*e1**2*e2**2*e3 + 690*e1
     $        **3*e3**2 - 498*e1**2*e2*e3**2 + 144*e1*e2**2*e3**2 + 2
     $        *(599*e1**4 + 35*e2**2*e3**2 - 469*e1**3*(e2 + e3) - 115
     $        *e1*e2*e3*(e2 + e3) + 20*e1**2*(7*e2**2 + 19*e2*e3 + 7*e3
     $        **2))*p2 + 2*(599*e1**4 + 35*e2**2*e3**2 - 2*e1*e2*e3*(53
     $        *e2 + 62*e3) - 2*e1**3*(186*e2 + 283*e3) + e1**2*(101*e2
     $        **2 + 380*e2*e3 + 179*e3**2))*pq + 1779*e1**4*q2 - 1490*e1
     $        **3*e2*q2 + 455*e1**2*e2**2*q2 - 1684*e1**3*e3*q2 + 1508
     $        *e1**2*e2*e3*q2 - 472*e1*e2**2*e3*q2 + 533*e1**2*e3**2*q2
     $        - 490*e1*e2*e3**2*q2 + 155*e2**2*e3**2*q2)/(5040.d0*e1**6)
      else if (abs((e1-e2)/(e1+e2)).le.eps) then
         c11_eq = (6*p2*((e1 - e3)*(37*e1**7 + 2*e2**2*e3**5 - e1*e2*e3
     $        **4*(13*e2 + 7*e3) + e1**6*(-32*e2 + 187*e3) + e1**5*(10
     $        *e2**2 - 239*e2*e3 - 323*e3**2) + e1**2*e3**3*(37*e2**2 +
     $        46*e2*e3 + 10*e3**2) - e1**3*e3**2*(63*e2**2 + 134*e2*e3 +
     $        68*e3**2) + e1**4*e3*(87*e2**2 + 246*e2*e3 + 217*e3**2)) +
     $        60*e1**5*e3*(3*e1**2 + e2**2 + e2*e3 + e3**2 - 3*e1*(e2 +
     $        e3))*Log(e3/e1)) + e1*(2*pq*((e1 - e3)*(159*e1**6 - 4*e1
     $        **5*(32*e2 - 431*e3) + 9*e2**2*e3**4 - 48*e1*e2*e3**3*(2
     $        *e2 + e3) + 3*e1**4*(13*e2**2 - 696*e2*e3 - 592*e3**2) +
     $        e1**2*e3**2*(24*e2**2 + 152*e2*e3 - 71*e3**2) + 12*e1**3
     $        *e3*(62*e2**2 + 56*e2*e3 + 57*e3**2)) + 60*e1**2*e3*(18*e1
     $        **4 - 18*e1**3*e2 + 6*e1**2*(e2**2 - 3*e2*e3 - 2*e3**2) -
     $        e3**2*(3*e2**2 + 2*e2*e3 + e3**2) + e1*e3*(9*e2**2 + 14*e2
     $        *e3 + 7*e3**2))*Log(e3/e1)) + 5*(3*(e1 - e3)**2*((e1 - e3)
     $        *(35*e1**5 + 3*e2**2*e3**3 - e1*e2*e3**2*(17*e2 + 14*e3) -
     $        e1**4*(24*e2 + 23*e3) + e1**3*(7*e2**2 - 38*e2*e3 - 5*e3
     $        **2) + e1**2*e3*(19*e2**2 + 52*e2*e3 + 5*e3**2)) + 12*e1
     $        **2*(2*e1 - e3)*e3*(3*e1**2 + e2**2 + e2*e3 + e3**2 - 3*e1
     $        *(e2 + e3))*Log(e3/e1)) + q2*((e1 - e3)*(95*e1**6 + 9*e2
     $        **2*e3**4 - 6*e1*e2*e3**3*(17*e2 + 7*e3) + e1**5*(-98*e2 +
     $        1038*e3) + 3*e1**4*(11*e2**2 - 492*e2*e3 - 362*e3**2) + e1
     $        **2*e3**2*(-150*e2**2 + 92*e2*e3 - 45*e3**2) + 2*e1**3*e3
     $        *(285*e2**2 + 402*e2*e3 + 179*e3**2)) + 12*e1**2*e3*(54*e1
     $        **4 - 66*e1**3*e2 + 8*e1**2*(3*e2**2 - 6*e2*e3 - 5*e3**2)
     $        - e3**2*(21*e2**2 + 10*e2*e3 + 3*e3**2) + e1*e3*(27*e2**2
     $        + 64*e2*e3 + 19*e3**2))*Log(e3/e1)))))/(360.d0*e1**3*(e1 -
     $        e3)**7)
      else if (abs((e1-e3)/(e1+e3)).le.eps) then
         c11_eq = (3*(e1 - e3)**2*(35*e1**7 - 10*e1**6*e2 - 265*e1**5*e2
     $        **2 + 520*e1**4*e2**3 - 395*e1**3*e2**4 + 130*e1**2*e2**5
     $        - 15*e1*e2**6 + 49*e1**6*q2 + 579*e1**5*e2*q2 - 1020*e1**4
     $        *e2**2*q2 + 360*e1**3*e2**3*q2 + 15*e1**2*e2**4*q2 + 21*e1
     $        *e2**5*q2 - 4*e2**6*q2 + 120*e1**6*e2*Log(e2/e1) - 300*e1
     $        **5*e2**2*Log(e2/e1) + 240*e1**4*e2**3*Log(e2/e1) - 60*e1
     $        **3*e2**4*Log(e2/e1) + 360*e1**5*e2*q2*Log(e2/e1) + 180*e1
     $        **4*e2**2*q2*Log(e2/e1) - 300*e1**3*e2**3*q2*Log(e2/e1) +
     $        2*p2*(10*e1**6 + 77*e1**5*e2 - 150*e1**4*e2**2 + 100*e1**3
     $        *e2**3 - 50*e1**2*e2**4 + 15*e1*e2**5 - 2*e2**6 + 60*e1**5
     $        *e2*Log(e2/e1)) + 2*pq*(7*e1**6 - 81*e1**5*e2 - 60*e1**4
     $        *e2**2 + 240*e1**3*e2**3 - 135*e1**2*e2**4 + 33*e1*e2**5 -
     $        4*e2**6 - 60*e1**3*(3*e1 - e2)*e2**2*Log(e2/e1))) + 10*e1
     $        **2*(e1 - e2)**2*(27*e1**5 - 90*e1**4*e2 + 108*e1**3*e2**2
     $        - 54*e1**2*e2**3 + 9*e1*e2**4 + 10*e1**4*q2 + 21*e1**3*e2
     $        *q2 - 63*e1**2*e2**2*q2 + 35*e1*e2**3*q2 - 3*e2**4*q2 + 36
     $        *e1**4*e2*Log(e2/e1) - 90*e1**3*e2**2*Log(e2/e1) + 72*e1
     $        **2*e2**3*Log(e2/e1) - 18*e1*e2**4*Log(e2/e1) + 36*e1**3
     $        *e2*q2*Log(e2/e1) - 18*e1**2*e2**2*q2*Log(e2/e1) - 6*e1*e2
     $        **3*q2*Log(e2/e1) + 3*p2*(3*e1**4 + 10*e1**3*e2 - 18*e1**2
     $        *e2**2 + 6*e1*e2**3 - e2**4 + 12*e1**3*e2*Log(e2/e1)) + 2
     $        *pq*(2*e1**4 - 15*e1**3*e2 + 9*e1**2*e2**2 + 7*e1*e2**3 -
     $        3*e2**4 + 6*e1*e2**2*(-3*e1 + e2)*Log(e2/e1))) + 2*e1*(e1
     $        - e2)*(e1 - e3)*(3*p2*(12*e1**5 + 65*e1**4*e2 - 120*e1**3
     $        *e2**2 + 60*e1**2*e2**3 - 20*e1*e2**4 + 3*e2**5 + 60*e1**4
     $        *e2*Log(e2/e1)) + 2*pq*(11*e1**5 - 105*e1**4*e2 + 160*e1
     $        **2*e2**3 - 75*e1*e2**4 + 9*e2**5 - 60*e1**2*(3*e1 - e2)
     $        *e2**2*Log(e2/e1)) + 3*(5*e1*(e1 - e2)**2*(5*e1**3 - 9*e1
     $        *e2**2 + 4*e2**3 + 6*e1*(2*e1 - e2)*e2*Log(e2/e1)) + q2
     $        *(22*e1**5 + 145*e1**4*e2 - 300*e1**3*e2**2 + 140*e1**2*e2
     $        **3 - 10*e1*e2**4 + 3*e2**5 + 60*(2*e1**4*e2 - e1**2*e2
     $        **3)*Log(e2/e1)))))/(360.d0*e1**3*(e1 - e2)**7)
      else
         c11_eq = (-3*(e2 - e3)**2*(-20*e1**6*e2 + 200*e1**5*e2**2 - 340
     $        *e1**4*e2**3 + 340*e1**2*e2**5 - 200*e1*e2**6 + 20*e2**7 -
     $        6*e1**6*q2 + 39*e1**5*e2*q2 - 45*e1**4*e2**2*q2 + 1200*e1
     $        **3*e2**3*q2 - 930*e1**2*e2**4*q2 - 279*e1*e2**5*q2 + 21
     $        *e2**6*q2 + 240*e1**4*e2**3*Log(e2/e1) - 480*e1**3*e2**4
     $        *Log(e2/e1) + 240*e1**2*e2**5*Log(e2/e1) + 540*e1**3*e2**3
     $        *q2*Log(e2/e1) + 900*e1**2*e2**4*q2*Log(e2/e1) + 20*e2*p2
     $        *(-e1**5 + 15*e1**4*e2 + 80*e1**3*e2**2 - 80*e1**2*e2**3 -
     $        15*e1*e2**4 + e2**5 + 60*e1**2*e2**2*(e1 + e2)*Log(e2/e1))
     $        + 30*e2*pq*(-e1**5 + 15*e1**4*e2 + 80*e1**3*e2**2 - 80*e1
     $        **2*e2**3 - 15*e1*e2**4 + e2**5 + 60*e1**2*e2**2*(e1 + e2)
     $        *Log(e2/e1))) - 10*(e1 - e2)**2*e2**2*(54*e1**4*e2 - 180
     $        *e1**3*e2**2 + 216*e1**2*e2**3 - 108*e1*e2**4 + 18*e2**5 -
     $        6*e1**4*q2 + 31*e1**3*e2*q2 + 9*e1**2*e2**2*q2 - 39*e1*e2
     $        **3*q2 + 5*e2**4*q2 + 36*e1**4*e2*Log(e2/e1) - 72*e1**3*e2
     $        **2*Log(e2/e1) + 36*e1**2*e2**3*Log(e2/e1) - 6*e1**3*e2*q2
     $        *Log(e2/e1) + 54*e1**2*e2**2*q2*Log(e2/e1) + 6*e2*p2*(17
     $        *e1**3 - 9*e1**2*e2 - 9*e1*e2**2 + e2**3 + 6*e1**2*(e1 + 3
     $        *e2)*Log(e2/e1)) + 6*e2*pq*(17*e1**3 - 9*e1**2*e2 - 9*e1
     $        *e2**2 + e2**3 + 6*e1**2*(e1 + 3*e2)*Log(e2/e1))) + 10*(e1
     $        - e2)*e2*(e2 - e3)*(6*e2*p2*(3*e1**4 + 44*e1**3*e2 - 36*e1
     $        **2*e2**2 - 12*e1*e2**3 + e2**4 + 12*e1**2*e2*(2*e1 + 3
     $        *e2)*Log(e2/e1)) + 8*e2*pq*(3*e1**4 + 44*e1**3*e2 - 36*e1
     $        **2*e2**2 - 12*e1*e2**3 + e2**4 + 12*e1**2*e2*(2*e1 + 3
     $        *e2)*Log(e2/e1)) + 3*(3*(e1 - e2)**2*e2*(2*e1**3 + 3*e1**2
     $        *e2 - 6*e1*e2**2 + e2**3 + 6*e1**2*e2*Log(e2/e1)) + q2*(e1
     $        **5 - 6*e1**4*e2 + 52*e1**3*e2**2 - 28*e1**2*e2**3 - 21*e1
     $        *e2**4 + 2*e2**5 + 12*e1**2*e2**2*(e1 + 4*e2)*Log(e2
     $        /e1)))))/(360.d0*(e1 - e2)**7*e2**3)
      end if
      return
      end

      double precision function c11_neq(p2,q2,pq,e1,e2,e3)
c     all masses different and do not vanish
      implicit double precision (a-h,o-z)
      c11_neq = (-(e1/((e1 - e2)*(e1 - e3))) + (e2*(-2*e1 + e2)*Log(e2
     $     /e1))/((e1 - e2)**2*(e2 - e3)) + ((2*e1 - e3)*e3*Log(e3/e1))
     $     /((e1 - e3)**2*(e2 - e3)) + 2*p2*((-11*e1**4 + e2**2*e3**2 +
     $     7*e1**3*(e2 + e3) - 5*e1*e2*e3*(e2 + e3) - 2*e1**2*(e2**2 - 5
     $     *e2*e3 + e3**2))/(6.d0*(e1 - e2)**3*(e1 - e3)**3) - (e1**2*e2
     $     *Log(e2/e1))/((e1 - e2)**4*(e2 - e3)) - (e1**2*e3*Log(e3/e1))
     $     /((e1 - e3)**4*(-e2 + e3))) + (2*pq*(-(((e2 - e3)*(e1**3*(4
     $     *e2 - 7*e3) - 5*e1*e2**2*e3 + e2**2*e3**2 + e1**2*(-2*e2**2 +
     $     8*e2*e3 + e3**2)))/((e1 - e2)**2*(e1 - e3)**3)) + (e2**2*(-3
     $     *e1 + e2)*Log(e2/e1))/(e1 - e2)**3 + (e3*(e1**2*(6*e2 - 3*e3)
     $     - 4*e1*e3**2 + e3**3)*Log(e3/e1))/(e1 - e3)**4))/(3.d0*(e2 -
     $     e3)**2) + (q2*((e2*(e2 - 5*e3)*e3**2 + 3*e1**3*(e2 + e3) + e1
     $     *e3*(-5*e2**2 + 17*e2*e3 + 2*e3**2) - e1**2*(2*e2**2 + 3*e2
     $     *e3 + 11*e3**2))/((e1 - e2)*(e1 - e3)**3*(e2 - e3)**2) + (e2
     $     *(e2**2 - 6*e1*e3 + 3*e2*e3)*Log(e2/e1))/((e1 - e2)**2*(e2 -
     $     e3)**3) + (e3*(-6*e1**3*e2 + e3**3*(e2 + 3*e3) - 2*e1*e3**2
     $     *(2*e2 + 5*e3) + e1**2*(-6*e2**2 + 21*e2*e3 + e3**2))*Log(e3
     $     /e1))/((e1 - e3)**4*(-e2 + e3)**3)))/3.d0)/2.d0
      return
      end

      double precision function c12_0(p2,q2,pq,e1,e2,e3)
c     one loop mass vanish
      implicit double precision (a-h,o-z)
      common/cp_acc/eps
      if (e1.le.eps) then
         e4 = max(e1,eps)
         if (abs((e2-e3)/(e2+e3)).le.eps) then
            c12_0 = (4*pq*(e2**2*(43*e2**2 - 51*e2*e3 + 18*e3**2) - 2*e2
     $           *(137*e2**2 - 189*e2*e3 + 72*e3**2)*e4 - 3*(1507*e2**2
     $           - 2319*e2*e3 + 942*e3**2)*e4**2 + 180*(10*e2**2 - 15*e2
     $           *e3 + 6*e3**2)*e4**2*Log(e2/e4)) + 5*p2*(e2**2*(23*e2
     $           **2 - 26*e2*e3 + 9*e3**2) - 24*e2*(6*e2**2 - 8*e2*e3 +
     $           3*e3**2)*e4 - 3*(781*e2**2 - 1174*e2*e3 + 471*e3**2)*e4
     $           **2 + 36*(26*e2**2 - 38*e2*e3 + 15*e3**2)*e4**2*Log(e2
     $           /e4)) + 3*(5*e2*(e2**2*(13*e2**2 - 10*e2*e3 + 3*e3**2)
     $           + e2*(-23*e2**2 + 26*e2*e3 - 9*e3**2)*e4 + (-137*e2**2
     $           + 194*e2*e3 - 75*e3**2)*e4**2 + 12*(6*e2**2 - 8*e2*e3 +
     $           3*e3**2)*e4**2*Log(e2/e4)) + 2*q2*(e2**2*(20*e2**2 - 23
     $           *e2*e3 + 8*e3**2) + e2*(-100*e2**2 + 137*e2*e3 - 52*e3
     $           **2)*e4 + (-1470*e2**2 + 2267*e2*e3 - 922*e3**2)*e4**2
     $           + 60*(10*e2**2 - 15*e2*e3 + 6*e3**2)*e4**2*Log(e2
     $           /e4))))/(360.d0*e2**6)
         else
            c12_0 = ((e2 - e3)**2*p2*(e2**3*e3**2 - e2**2*e3**3 - 2*e2
     $           **3*e3*e4 + 4*e2**2*e3**2*e4 - 2*e2*e3**3*e4 - 11*e2**3
     $           *e4**2 + 15*e2**2*e3*e4**2 - 4*e3**3*e4**2 + 3*(e2 -
     $           e3)**2*(2*e2 + e3)*e4**2*Log(e2) + e2**2*e3**3*Log(e3
     $           /e2) + 6*e2**3*e4**2*Log(e3/e2) - 9*e2**2*e3*e4**2
     $           *Log(e3/e2) - 3*(e2 - e3)**2*(2*e2 + e3)*e4**2*Log(e4))
     $           - e2*(3*(e2 - e3)**2*e3*(-((e2 - e3)**2*e4**2*Log(e2))
     $           + e2*((e2 - e3)*(e3**2 + e3*e4 + e4**2) + (e2*e3**2 +
     $           e3**2*e4 - (e2 - 2*e3)*e4**2)*Log(e3/e2)) + (e2 - e3)
     $           **2*e4**2*Log(e4)) - 2*(e2 - e3)*pq*(e2**3*e3**2 - e2
     $           *e3**4 - 2*e2**3*e3*e4 + 8*e2**2*e3**2*e4 - 6*e2*e3**3
     $           *e4 - 11*e2**3*e4**2 + 30*e2**2*e3*e4**2 - 21*e2*e3**2
     $           *e4**2 + 2*e3**3*e4**2 + 6*(e2 - e3)**3*e4**2*Log(e2) +
     $           2*e2**2*e3**3*Log(e3/e2) + 4*e2*e3**3*e4*Log(e3/e2) + 6
     $           *e2**3*e4**2*Log(e3/e2) - 18*e2**2*e3*e4**2*Log(e3/e2)
     $           + 18*e2*e3**2*e4**2*Log(e3/e2) - 6*(e2 - e3)**3*e4**2
     $           *Log(e4)) + q2*(-6*(e2 - e3)**4*e4**2*Log(e2) + e2*((e2
     $           - e3)*(e3**2*(-e2**2 + 5*e2*e3 + 2*e3**2) + e3*(2*e2**2
     $           - 7*e2*e3 + 11*e3**2)*e4 + (11*e2**2 - 31*e2*e3 + 26*e3
     $           **2)*e4**2) - 6*(-(e2*e3**4) - e3**4*e4 + (e2**3 - 4*e2
     $           **2*e3 + 6*e2*e3**2 - 4*e3**3)*e4**2)*Log(e3/e2)) + 6
     $           *(e2 - e3)**4*e4**2*Log(e4))))/(6.d0*e2**2*(e2 - e3)**4
     $           *e3**3)
         end if
      else if (e2.le.eps) then
         e4 = max(e2,eps)
         if (abs((e1-e3)/(e1+e3)).le.eps) then
            c12_0 = (4*(17*e1**4 + 60*e3**2*e4**2 - 12*e1*e3*e4*(e3 + 13
     $           *e4) - 2*e1**3*(9*e3 + 13*e4) + 3*e1**2*(2*e3**2 + 11
     $           *e3*e4 + 37*e4**2))*pq + p2*(63*e1**4 - 1293*e3**2*e4
     $           **2 - 32*e1**3*(2*e3 + 7*e4) + 24*e1*e3*e4*(-4*e3 + 141
     $           *e4) - 3*e1**2*(-7*e3**2 - 90*e3*e4 + 817*e4**2) - 180
     $           *(6*e1**2 - 8*e1*e3 + 3*e3**2)*e4**2*Log(e4/e1)) + 3*(5
     $           *e1*(13*e1**4 - 75*e3**2*e4**2 - e1**3*(10*e3 + 23*e4)
     $           + e1*e3*e4*(-9*e3 + 194*e4) + e1**2*(3*e3**2 + 26*e3*e4
     $           - 137*e4**2) - 12*(6*e1**2 - 8*e1*e3 + 3*e3**2)*e4**2
     $           *Log(e4/e1)) + 2*q2*(20*e1**4 - 922*e3**2*e4**2 - e1**3
     $           *(23*e3 + 100*e4) + e1*e3*e4*(-52*e3 + 2267*e4) + e1**2
     $           *(8*e3**2 + 137*e3*e4 - 1470*e4**2) - 60*(10*e1**2 - 15
     $           *e1*e3 + 6*e3**2)*e4**2*Log(e4/e1))))/(360.d0*e1**6)
         else
            c12_0 = (e3*p2*(-7*e1**4*e3**2 + 8*e1**3*e3**3 - e1**2*e3**4
     $           - 3*e1**4*e3*e4 - 2*e1**3*e3**2*e4 + 7*e1**2*e3**3*e4 -
     $           2*e1*e3**4*e4 - 3*e1**4*e4**2 + 4*e1**3*e3*e4**2 - 9*e1
     $           **2*e3**2*e4**2 + 12*e1*e3**3*e4**2 - 4*e3**4*e4**2 + 3
     $           *(e1 - e3)**4*e4**2*Log(e1) - 3*e1**4*e3**2*Log(e3/e1)
     $           - 4*e1**3*e3**3*Log(e3/e1) + e1**2*e3**4*Log(e3/e1) - 8
     $           *e1**3*e3**2*e4*Log(e3/e1) + 2*e1**2*e3**3*e4*Log(e3
     $           /e1) + 3*e1**4*e4**2*Log(e3/e1) - 12*e1**3*e3*e4**2
     $           *Log(e3/e1) + 3*e1**2*e3**2*e4**2*Log(e3/e1) - 3*(e1 -
     $           e3)**4*e4**2*Log(e4)) + e1*(2*e3*pq*(-((e1 - e3)*(2*e3
     $           **2*e4**2 + e1**2*(5*e3**2 + e3*e4 - e4**2) + e1*e3*(e3
     $           **2 + 5*e3*e4 + 5*e4**2))) - 2*e1*e3**2*(e1**2 + 2*e1
     $           *(e3 + e4) + e4*(e3 + 3*e4))*Log(e3/e1)) - 3*(e1 - e3)
     $           **2*e3*(-((e1 - e3)**2*e4**2*Log(e1)) + e1*((e1 - e3)
     $           *(e3**2 + e3*e4 + e4**2) + (e3*e4*(e3 + 2*e4) + e1*(e3
     $           **2 - e4**2))*Log(e3/e1)) + (e1 - e3)**2*e4**2*Log(e4))
     $           + q2*(6*(e1 - e3)**4*e4**2*Log(e1) + e1*((e1 - e3)*(e1
     $           **2*(e3**2 - 2*e3*e4 - 11*e4**2) - e3**2*(2*e3**2 + 11
     $           *e3*e4 + 26*e4**2) + e1*e3*(-5*e3**2 + 7*e3*e4 + 31*e4
     $           **2)) + 6*(e1**3*e4**2 - 4*e1**2*e3*e4**2 - e3**3*e4
     $           *(e3 + 4*e4) + e1*(-e3**4 + 6*e3**2*e4**2))*Log(e3/e1))
     $           - 6*(e1 - e3)**4*e4**2*Log(e4))))/(6.d0*e1**2*(e1 - e3)
     $           **4*e3**3)
         end if
      else
         e4 = max(e3,eps)
         if (abs((e1-e2)/(e1+e2)).le.eps) then
            c12_0 = (p2*(159*e1**4 + 6*e1*e2*(163*e2 - 2424*e4)*e4 +
     $           5307*e2**2*e4**2 + e1**3*(-128*e2 + 2678*e4) + 3*e1**2
     $           *(13*e2**2 - 952*e2*e4 + 3969*e4**2) + 180*e4*(6*e1**3
     $           + 2*e1*e2*(e2 - 24*e4) - 6*e1**2*(e2 - 7*e4) + 17*e2**2
     $           *e4)*Log(e4/e1)) + 10*(2*pq*(13*e1**4 - 5*e1**3*(2*e2 -
     $           57*e4) + 3*e1*e2*(35*e2 - 608*e4)*e4 + 672*e2**2*e4**2
     $           + 3*e1**2*(e2**2 - 102*e2*e4 + 486*e4**2) + 36*e4*(3*e1
     $           **3 + e1*e2*(e2 - 28*e4) - 3*e1**2*(e2 - 8*e4) + 10*e2
     $           **2*e4)*Log(e4/e1)) + 3*(e1*(11*e1**4 - 7*e1**3*(e2 -
     $           10*e4) + e1*e2*(28*e2 - 267*e4)*e4 + 102*e2**2*e4**2 +
     $           e1**2*(2*e2**2 - 80*e2*e4 + 195*e4**2) + 6*e4*(6*e1**3
     $           + e1*e2*(2*e2 - 33*e4) + 12*e2**2*e4 + e1**2*(-6*e2 +
     $           27*e4))*Log(e4/e1)) + 4*q2*(3*e1**4 + e1*e2*(35*e2 -
     $           568*e4)*e4 + 224*e2**2*e4**2 + e1**3*(-3*e2 + 73*e4) +
     $           e1**2*(e2**2 - 94*e2*e4 + 395*e4**2) + 3*e4*(9*e1**3 +
     $           4*e1*e2*(e2 - 26*e4) + 40*e2**2*e4 + e1**2*(-11*e2 + 76
     $           *e4))*Log(e4/e1)))))/(360.d0*e1**6)
         else
            c12_0 = -(e2*p2*(3*(e1 - e2)**3*e4*(2*e1*e2 + 3*e1*e4 + 8*e2
     $           *e4)*Log(e1) + e1**3*(3*e1 - e2)*(e2**2 + 2*e2*e4 + 3
     $           *e4**2)*Log(e2/e1) + (e1 - e2)*(-26*e2**3*e4**2 + e1*e2
     $           **2*e4*(-11*e2 + 37*e4) + e1**3*(4*e2**2 - 3*e2*e4 - 3
     $           *e4**2) - 2*e1**2*e2*(e2**2 - 9*e2*e4 + e4**2) - 3*(e1
     $           - e2)**2*e4*(2*e1*e2 + 3*e1*e4 + 8*e2*e4)*Log(e4))) +
     $           (e1 - e2)*(2*e2*pq*(6*(e1 - e2)**2*e4*(4*e2*e4 + e1*(e2
     $           + 2*e4))*Log(e1) + 2*e1**3*(e2**2 + 3*e2*e4 + 6*e4**2)
     $           *Log(e2/e1) + (e1 - e2)*(e1*e2*(11*e2 - 7*e4)*e4 + 26
     $           *e2**2*e4**2 + e1**2*(2*e2**2 - 5*e2*e4 - 7*e4**2) - 6
     $           *(e1 - e2)*e4*(4*e2*e4 + e1*(e2 + 2*e4))*Log(e4))) +
     $           (e1 - e2)*(q2*(-2*e1**3*e2**2 + 2*e1**2*e2**3 - 11*e1
     $           **3*e2*e4 + 11*e1*e2**3*e4 - 26*e1**3*e4**2 + 26*e2**3
     $           *e4**2 + 6*e4*(-(e1*e2**3) - 4*e2**3*e4 + e1**3*(e2 + 4
     $           *e4))*Log(e1) + 6*e1**3*e4*(e2 + 4*e4)*Log(e2/e1) - 6
     $           *e1**3*e2*e4*Log(e4) + 6*e1*e2**3*e4*Log(e4) - 24*e1**3
     $           *e4**2*Log(e4) + 24*e2**3*e4**2*Log(e4)) + 3*e1*e2*((e1
     $           - e2)*e4*(2*e1*e2 + 3*e1*e4 + 3*e2*e4)*Log(e1) + e1**2
     $           *(e2**2 + 2*e2*e4 + 3*e4**2)*Log(e2/e1) - (e1 - e2)*e4
     $           *(e2*e4 + e1*(e2 + e4) + (2*e1*e2 + 3*e1*e4 + 3*e2*e4)
     $           *Log(e4))))))/(6.d0*e1**3*(e1 - e2)**3*e2**3)
         end if
      end if
      return
      end

      double precision function c12_eq(p2,q2,pq,e1,e2,e3)
      implicit double precision (a-h,o-z)
c     2 loop masses equal
      common/cp_acc/eps
      if ((abs((e1-e2)/(e1+e2)).le.2*eps).and.(abs((e1-e3)/(e1+e3)).le.2
     $     *eps)) then
      c12_eq = ((599*e1**4 + 35*e2**2*e3**2 - 2*e1*e2*e3*(53*e2 + 62*e3)
     $     - 2*e1**3*(186*e2 + 283*e3) + e1**2*(101*e2**2 + 380*e2*e3 +
     $     179*e3**2))*p2 + 2*(3*e1*(376*e1**4 + 12*e2**2*e3**2 - e1*e2
     $     *e3*(38*e2 + 45*e3) - 2*e1**3*(82*e2 + 131*e3) + e1**2*(40*e2
     $     **2 + 146*e2*e3 + 75*e3**2)) + 2*(195*e1**4 + 10*e2**2*e3**2
     $     - e1*e2*e3*(29*e2 + 38*e3) - e1**3*(100*e2 + 197*e3) + e1**2
     $     *(25*e2**2 + 112*e2*e3 + 64*e3**2))*pq + 2*(245*e1**4 + 20*e2
     $     **2*e3**2 - e1*e2*e3*(58*e2 + 67*e3) - e1**3*(175*e2 + 253
     $     *e3) + e1**2*(50*e2**2 + 197*e2*e3 + 83*e3**2))*q2))/(5040.d0
     $     *e1**6)
      else if (abs((e1-e2)/(e1+e2)).le.eps) then
         c12_eq = (p2*((e1 - e3)*(159*e1**6 - 4*e1**5*(32*e2 - 431*e3) +
     $        9*e2**2*e3**4 - 48*e1*e2*e3**3*(2*e2 + e3) + 3*e1**4*(13
     $        *e2**2 - 696*e2*e3 - 592*e3**2) + e1**2*e3**2*(24*e2**2 +
     $        152*e2*e3 - 71*e3**2) + 12*e1**3*e3*(62*e2**2 + 56*e2*e3 +
     $        57*e3**2)) + 60*e1**2*e3*(18*e1**4 - 18*e1**3*e2 + 6*e1**2
     $        *(e2**2 - 3*e2*e3 - 2*e3**2) - e3**2*(3*e2**2 + 2*e2*e3 +
     $        e3**2) + e1*e3*(9*e2**2 + 14*e2*e3 + 7*e3**2))*Log(e3/e1))
     $        + 10*e1*(2*pq*((e1 - e3)*(13*e1**5 + 3*e2**2*e3**3 + e1**4
     $        *(-10*e2 + 207*e3) + 3*e1**3*(e2**2 - 82*e2*e3 - 19*e3**2)
     $        + e1*e3**2*(87*e2**2 + 34*e2*e3 + 6*e3**2) + e1**2*e3*(87
     $        *e2**2 - 138*e2*e3 + 11*e3**2)) + 12*e1*e3*(9*e1**4 - 9*e1
     $        **3*(e2 - e3) + e2*e3**2*(3*e2 + e3) + e1**2*(3*e2**2 - 21
     $        *e2*e3 - 5*e3**2) + e1*e3*(9*e2**2 - e2*e3 + 2*e3**2))
     $        *Log(e3/e1)) + 3*((e1 - e3)**2*((e1 - e3)*(11*e1**4 + 2*e2
     $        **2*e3**2 + e1**3*(-7*e2 + 26*e3) + e1**2*(2*e2**2 - 52*e2
     $        *e3 - 19*e3**2) + e1*e3*(20*e2**2 + 11*e2*e3 + 6*e3**2)) +
     $        6*e1*e3*(6*e1**3 - 3*e1**2*(2*e2 + e3) + e2*e3*(2*e2 + e3)
     $        + e1*(2*e2**2 - 3*e2*e3 + e3**2))*Log(e3/e1)) + 4*q2*((e1
     $        - e3)*(3*e1**5 + e2**2*e3**3 + e1**4*(-3*e2 + 55*e3) + e1
     $        *e3**2*(29*e2**2 + 8*e2*e3 + e3**2) - e1**2*e3*(-29*e2**2
     $        + 49*e2*e3 + e3**2) + e1**3*(e2**2 - 76*e2*e3 + 2*e3**2))
     $        + 3*e1*e3*(9*e1**4 + e2*e3**2*(4*e2 + e3) + e1**3*(-11*e2
     $        + 13*e3) + e1**2*(4*e2**2 - 27*e2*e3 - 3*e3**2) + e1*e3
     $        *(12*e2**2 - 3*e2*e3 + e3**2))*Log(e3/e1)))))/(360.d0*e1
     $        **2*(e1 - e3)**7)
      else if (abs((e1-e3)/(e1+e3)).le.eps) then
         c12_eq = (p2*((e1 - e2)*(63*e1**7 + 12*e2**5*e3**2 - 3*e1*e2**4
     $        *e3*(14*e2 + 29*e3) - 2*e1**6*(301*e2 + 32*e3) + 6*e1**4
     $        *e2*(103*e2**2 + 134*e2*e3 - 37*e3**2) + e1**5*(-162*e2**2
     $        + 654*e2*e3 + 21*e3**2) + 6*e1**2*e2**3*(10*e2**2 + 54*e2
     $        *e3 + 53*e3**2) - e1**3*e2**2*(337*e2**2 + 956*e2*e3 + 402
     $        *e3**2)) - 60*e1**3*(3*e1 - e2)*e2**2*(6*e1**2 + e2**2 + 2
     $        *e2*e3 + 3*e3**2 - 4*e1*(e2 + 2*e3))*Log(e2/e1)) + 4*pq
     $        *((e1 - e2)*(17*e1**7 + 6*e2**5*e3**2 - 2*e1**6*(64*e2 + 9
     $        *e3) - 3*e1*e2**4*e3*(7*e2 + 16*e3) + 2*e1**4*e2*(11*e2**2
     $        - 312*e2*e3 - 24*e3**2) + 3*e1**5*(174*e2**2 + 47*e2*e3 +
     $        2*e3**2) + 6*e1**2*e2**3*(5*e2**2 + 31*e2*e3 + 37*e3**2) +
     $        e1**3*e2**2*(-103*e2**2 - 384*e2*e3 + 222*e3**2)) + 60*e1
     $        **3*e2**3*(10*e1**2 + e2**2 + 3*e2*e3 + 6*e3**2 - 5*e1*(e2
     $        + 3*e3))*Log(e2/e1)) + 3*(5*e1*(e1 - e2)**2*((e1 - e2)*(13
     $        *e1**5 + 3*e2**3*e3**2 - 5*e1**4*(15*e2 + 2*e3) - 7*e1*e2
     $        **2*e3*(2*e2 + 3*e3) + e1**2*e2*(-7*e2**2 + 30*e2*e3 - 21
     $        *e3**2) + 3*e1**3*(11*e2**2 + 22*e2*e3 + e3**2)) - 12*e1
     $        **2*e2**2*(6*e1**2 + e2**2 + 2*e2*e3 + 3*e3**2 - 4*e1*(e2
     $        + 2*e3))*Log(e2/e1)) + 2*q2*((e1 - e2)*(20*e1**7 + 2*e2**5
     $        *e3**2 - e1*e2**4*e3*(7*e2 + 10*e3) - e1**6*(220*e2 + 23
     $        *e3) + 10*e1**4*e2*(23*e2**2 + 110*e2*e3 - 10*e3**2) + 5
     $        *e1**2*e2**3*(2*e2**2 + 7*e2*e3 - 2*e3**2) + e1**5*(-570
     $        *e2**2 + 275*e2*e3 + 8*e3**2) - 10*e1**3*e2**2*(7*e2**2 +
     $        18*e2*e3 + 49*e3**2)) - 60*e1**3*e2**2*(10*e1**3 - 15*e1
     $        **2*e3 + 6*e1*e3*(-e2 + e3) + e2*e3*(e2 + 4*e3))*Log(e2
     $        /e1))))/(360.d0*e1**3*(e1 - e2)**7)
      else
         c12_eq = -(4*e2*pq*((e1 - e2)*(e2**4*(-43*e2**2 + 51*e2*e3 - 18
     $        *e3**2) + e1**4*(107*e2**2 + 81*e2*e3 - 18*e3**2) + 36*e1
     $        **2*e2**2*(62*e2**2 - 109*e2*e3 + 47*e3**2) + 4*e1*e2**3
     $        *(133*e2**2 - 171*e2*e3 + 63*e3**2) + 4*e1**3*e2*(-167*e2
     $        **2 + 39*e2*e3 + 63*e3**2)) + 60*e1**2*e2**2*(e1**3 + e1
     $        **2*(-5*e2 + 6*e3) + 3*e2*(10*e2**2 - 15*e2*e3 + 6*e3**2)
     $        + e1*(10*e2**2 - 33*e2*e3 + 18*e3**2))*Log(e2/e1)) + 5*e2
     $        *p2*((e1 - e2)*(e2**4*(-23*e2**2 + 26*e2*e3 - 9*e3**2) +
     $        e1**4*(69*e2**2 + 42*e2*e3 - 9*e3**2) + 6*e1*e2**3*(47*e2
     $        **2 - 58*e2*e3 + 21*e3**2) + 18*e1**2*e2**2*(63*e2**2 -
     $        110*e2*e3 + 47*e3**2) + 2*e1**3*e2*(-191*e2**2 + 50*e2*e3
     $        + 63*e3**2)) + 12*e1**2*e2**2*(3*e1**3 + e1**2*(-13*e2 +
     $        16*e3) + 3*e2*(26*e2**2 - 38*e2*e3 + 15*e3**2) + e1*(22*e2
     $        **2 - 82*e2*e3 + 45*e3**2))*Log(e2/e1)) + 3*(5*(e1 - e2)
     $        **2*e2*((e1 - e2)*(-3*e1**2*e2*(11*e2**2 + 10*e2*e3 - 7*e3
     $        **2) + e2**3*(-13*e2**2 + 10*e2*e3 - 3*e3**2) + e1**3*(7
     $        *e2**2 + 14*e2*e3 - 3*e3**2) + 3*e1*e2**2*(25*e2**2 - 22
     $        *e2*e3 + 7*e3**2)) + 12*e1**2*e2**2*(e1**2 - 4*e1*e2 + 6
     $        *e2**2 + 2*e1*e3 - 8*e2*e3 + 3*e3**2)*Log(e2/e1)) - 2*q2
     $        *((e1 - e2)*(10*e1**3*e2**2*(23*e2**2 - 18*e2*e3 - e3**2)
     $        + e1**5*(10*e2**2 - 7*e2*e3 + 2*e3**2) - 5*e1**4*e2*(14*e2
     $        **2 - 7*e2*e3 + 2*e3**2) + e2**5*(20*e2**2 - 23*e2*e3 + 8
     $        *e3**2) - 5*e1*e2**4*(44*e2**2 - 55*e2*e3 + 20*e3**2) - 10
     $        *e1**2*e2**3*(57*e2**2 - 110*e2*e3 + 49*e3**2)) - 60*e1**2
     $        *e2**3*(10*e2**3 - 15*e2**2*e3 + 6*e2*e3*(-e1 + e3) + e1
     $        *e3*(e1 + 4*e3))*Log(e2/e1))))/(360.d0*(e1 - e2)**7*e2**3)
      end if
      return
      end

      double precision function c12_neq(p2,q2,pq,e1,e2,e3)
c     all masses different and do not vanish
      implicit double precision (a-h,o-z)
      c12_neq = ((3*e3)/((e1 - e3)*(e2 - e3)) - (3*e2**2*Log(e2/e1))
     $     /((e1 - e2)*(e2 - e3)**2) - (3*e3*(e2*e3 + e1*(-2*e2 + e3))
     $     *Log(e3/e1))/((e1 - e3)**2*(e2 - e3)**2) + (p2*(-(((e2 - e3)
     $     *(e1**3*(4*e2 - 7*e3) - 5*e1*e2**2*e3 + e2**2*e3**2 + e1**2*(
     $     -2*e2**2 + 8*e2*e3 + e3**2)))/((e1 - e2)**2*(e1 - e3)**3)) +
     $     (e2**2*(-3*e1 + e2)*Log(e2/e1))/(e1 - e2)**3 + (e3*(e1**2*(6
     $     *e2 - 3*e3) - 4*e1*e3**2 + e3**3)*Log(e3/e1))/(e1 - e3)**4))
     $     /(e2 - e3)**2 + (q2*(((e2 - e3)*(e1*e3*(-5*e2**2 + 22*e2*e3 -
     $     5*e3**2) + e3**2*(e2**2 - 5*e2*e3 - 2*e3**2) + e1**2*(-2*e2
     $     **2 - 5*e2*e3 + e3**2)))/(-e1 + e3)**3 - (6*e2**2*e3*Log(e2
     $     /e1))/(e1 - e2) + (6*e3*(e1**3*e2**2 + e1**2*e2**2*(e2 - 4
     $     *e3) + e1*(4*e2 - e3)*e3**3 - e2*e3**4)*Log(e3/e1))/(e1 - e3)
     $     **4))/(e2 - e3)**4 + 2*pq*((e2*e3**2*(e2 + e3) + e1**2*(-2*e2
     $     **2 + 9*e2*e3 - 5*e3**2) - e1*e3*(5*e2**2 - 2*e2*e3 + e3**2))
     $     /((e1 - e2)*(e1 - e3)**3*(e2 - e3)**2) - (2*e2**3*Log(e2/e1))
     $     /((e1 - e2)**2*(e2 - e3)**3) - (2*e3*(e2*e3**3 + 2*e1*e3**2*(
     $     -2*e2 + e3) + e1**2*(3*e2**2 - 3*e2*e3 + e3**2))*Log(e3/e1))
     $     /((e1 - e3)**4*(-e2 + e3)**3)))/6.d0
      return
      end

